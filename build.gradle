plugins {
    id 'java-library'
	id 'com.github.ben-manes.versions' version '0.44.0'
    id 'maven-publish'
    id "io.github.krakowski.jextract" version "0.3.1"
}

repositories {
    mavenCentral()
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
}

group = 'io.calimero'
version = '2.6-SNAPSHOT'

ext.junitJupiterVersion = '5.9.1'

java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(19))
    }
    withSourcesJar()
    withJavadocJar()
}

compileJava.options.encoding = 'UTF-8'
compileTestJava.options.encoding = 'UTF-8'
javadoc.options.encoding = 'UTF-8'

compileJava.options*.compilerArgs = [
	'-Xlint:all,-serial',
	"--limit-modules", "java.base",
	"--enable-preview"
]

compileTestJava.options*.compilerArgs = [
	'-Xlint:all',
	'-Xlint:-try',
	"--enable-preview"
]

tasks.withType(Javadoc) {
    options.addStringOption("Xdoclint:-missing", '-quiet')
    options.addBooleanOption('-enable-preview', true)
	options.addStringOption("-release", "${targetCompatibility}")
}

tasks.withType(Jar) {
	from("${projectDir}") {
        include 'LICENSE'
        into "META-INF"
    }
    if (name.equals('sourcesJar')) {
    	duplicatesStrategy = 'EXCLUDE'
    	from("${projectDir}") {
		    include 'README.md', 'build.gradle', 'settings.gradle', 'gradle*/**'
        }
    }
}

test {
	useJUnitPlatform() {
		testLogging {
			exceptionFormat "full"
//			showStandardStreams true
		}
	}
	jvmArgs(['--enable-preview'])
}

tasks.withType(JavaExec) { jvmArgs += "--enable-preview" }


//project.gradle.startParameter.excludedTaskNames.add("jextract")

jextract {
	def path = "/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include"

	header("${project.projectDir}/src/include/headers.h") {
		includes = [ "$path" ]
		targetPackage = 'org.unix'
		className = 'Linux'
	}
}

dependencies {
    api "com.github.calimero:calimero-core:${version}"
    implementation 'org.slf4j:slf4j-api:1.7.36'
    testRuntimeOnly 'org.slf4j:slf4j-simple:1.7.36'
    testImplementation "org.junit.jupiter:junit-jupiter:${junitJupiterVersion}"
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = rootProject.name
            from components.java
            pom {
                name = 'Calimero serial-native service provider'
                description = 'Serial comummication provider using FFM'
                url = 'https://github.com/calimero-project/calimero-serialcom'
                inceptionYear = '2006'
                licenses {
                    license {
                        name = "GNU General Public License, version 2, with the Classpath Exception"
                        url = 'LICENSE'
                    }
                }
                developers {
                    developer {
                        name = "Boris Malinowsky"
                        email = "b.malinowsky@gmail.com"
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com:calimero-project/calimero-serialcom.git'
                    url = 'https://github.com/calimero-project/calimero-serialcom.git'
                }
            }
        }
    }
    repositories {
        maven {
            name 'maven'
            def releasesRepoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
            def snapshotsRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots/"
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            credentials(PasswordCredentials)
        }
    }
}
